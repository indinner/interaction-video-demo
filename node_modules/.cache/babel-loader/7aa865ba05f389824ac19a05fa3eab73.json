{"remainingRequest":"/Users/indinner/WebstormProjects/interaction-video-demo/node_modules/babel-loader/lib/index.js!/Users/indinner/WebstormProjects/interaction-video-demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/indinner/WebstormProjects/interaction-video-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/indinner/WebstormProjects/interaction-video-demo/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/indinner/WebstormProjects/interaction-video-demo/src/App.vue","mtime":1695884263877},{"path":"/Users/indinner/WebstormProjects/interaction-video-demo/babel.config.js","mtime":1569297232000},{"path":"/Users/indinner/WebstormProjects/interaction-video-demo/node_modules/cache-loader/dist/cjs.js","mtime":1695798989968},{"path":"/Users/indinner/WebstormProjects/interaction-video-demo/node_modules/babel-loader/lib/index.js","mtime":1695798988701},{"path":"/Users/indinner/WebstormProjects/interaction-video-demo/node_modules/cache-loader/dist/cjs.js","mtime":1695798989968},{"path":"/Users/indinner/WebstormProjects/interaction-video-demo/node_modules/vue-loader/lib/index.js","mtime":1695798988755}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\n// js 使用\nimport Videojs from 'video.js';\nimport 'video.js/dist/video-js.css';\nexport default {\n  name: 'app',\n  data: function data() {\n    return {\n      videoPlayerOption: {\n        controls: true,\n        //确定播放器是否具有用户可以与之交互的控件。没有控件，启动视频播放的唯一方法是使用autoplay属性或通过Player API。\n        poster: '',\n        //封面\n        autoplay: true,\n        //自动播放属性,\n        muted: false,\n        // 静音播放\n        preload: 'auto',\n        //建议浏览器是否应在<video>加载元素后立即开始下载视频数据。\n        fluid: true\n      },\n      currentVideo: '',\n      //正在播放的视频\n      player: null,\n      //存储video.js返回的player对象\n      questionShow: false,\n      //是否展示问题\n      videoConfig: {\n        startVideoID: 'ID1001',\n        //视频初始ID\n        videoList: [{\n          videoID: 'ID1001',\n          //视频ID\n          videoUrl: 'http://www.w3school.com.cn/example/html5/mov_bbb.mp4',\n          //视频播放地址\n          questionContent: '什么是BMI?',\n          //视频播放结束后的题目\n          options: [{\n            content: '我不知道',\n            //选项描述\n            nextVideoID: 'ID1002' //选择该选项后要跳转的视频\n          }, {\n            content: '我知道',\n            //选项描述\n            nextVideoID: 'ID1003' //选择该选项后要跳转的视频\n          }],\n\n          //题目选项\n          answer: 0 //题目答案\n        }, {\n          videoID: 'ID1002',\n          //视频ID\n          videoUrl: 'http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4' //视频播放地址\n        }, {\n          videoID: 'ID1003',\n          //视频ID\n          videoUrl: 'https://media.w3.org/2010/05/sintel/trailer.mp4' //视频播放地址\n        }]\n      } //视频配置\n    };\n  },\n  mounted: function mounted() {\n    //首先获取startVideoID\n    var startVideoID = this.videoConfig.startVideoID;\n    this.videoCore(startVideoID);\n  },\n  methods: {\n    //视频切换核心\n    videoCore: function videoCore(videoID) {\n      var _this = this;\n      //从videoList查找视频\n      this.currentVideo = this.videoConfig.videoList.find(function (video) {\n        return video.videoID === videoID;\n      });\n      this.player = Videojs(document.getElementById('myVideo'), this.videoPlayerOption, function () {});\n      this.player.on('timeupdate', function () {\n        var currentTime = _this.player.currentTime();\n        console.log(\"当前视频ID:\", _this.currentVideo.videoID, \"当前视频进度：\", currentTime);\n        /**\n         * TODO:判断当前视频播放进度,将当前视频播放时间通知出去\n         **/\n      });\n\n      this.player.on('play', function () {\n        console.log(\"监听到视频开始播放\");\n      });\n      this.player.on('ended', function () {\n        console.log(\"监听到视频播放完毕\");\n        /**\n         * TODO:展示视频后带的题目\n         **/\n        _this.questionShow = true;\n      });\n    },\n    //答案选择\n    selectOption: function selectOption(userAnswer) {\n      var _this2 = this;\n      //判断答案是否正确，展示相应的颜色\n\n      if (userAnswer === this.currentVideo.answer) {\n        document.getElementById('questionOption' + userAnswer).style.background = 'green';\n      } else {\n        document.getElementById('questionOption' + userAnswer).style.background = 'red';\n      }\n      setTimeout(function () {\n        _this2.questionShow = false;\n        var nextVideoID = _this2.currentVideo.options[userAnswer].nextVideoID;\n        console.log(\"开始播放下一个视频，视频ID:\", nextVideoID);\n        _this2.videoPlayerOption.autoplay = true;\n        _this2.videoCore(nextVideoID);\n      }, 1500);\n    }\n  }\n};",{"version":3,"names":["Videojs","name","data","videoPlayerOption","controls","poster","autoplay","muted","preload","fluid","currentVideo","player","questionShow","videoConfig","startVideoID","videoList","videoID","videoUrl","questionContent","options","content","nextVideoID","answer","mounted","videoCore","methods","_this","find","video","document","getElementById","on","currentTime","console","log","selectOption","userAnswer","_this2","style","background","setTimeout"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n\n\n\n    <div class=\"video-box\">\n      <video id=\"myVideo\" class=\"video-js\" width=\"100%\" height=\"100%\" controls :src=\"currentVideo.videoUrl\"></video>\n      <div v-if=\"questionShow&&currentVideo.questionContent!==undefined\" class=\"question-box\">\n        <div class=\"question\">\n          <div class=\"question-content\">\n            {{ currentVideo.questionContent }}\n          </div>\n          <div @click=\"selectOption(index)\" :id=\"'questionOption'+index\" v-for=\"(item,index) in currentVideo.options\" class=\"question-option\">A. {{ item.content }}</div>\n        </div>\n      </div>\n    </div>\n\n\n\n\n  </div>\n</template>\n\n<script>\n// js 使用\nimport Videojs from 'video.js'\nimport 'video.js/dist/video-js.css'\nexport default {\n  name: 'app',\n\n  data(){\n    return{\n      videoPlayerOption: {\n        controls: true, //确定播放器是否具有用户可以与之交互的控件。没有控件，启动视频播放的唯一方法是使用autoplay属性或通过Player API。\n        poster: '',//封面\n        autoplay: true, //自动播放属性,\n        muted: false, // 静音播放\n        preload: 'auto', //建议浏览器是否应在<video>加载元素后立即开始下载视频数据。\n        fluid: true\n      },\n      currentVideo:'',//正在播放的视频\n      player:null,//存储video.js返回的player对象\n      questionShow:false,//是否展示问题\n      videoConfig:{\n        startVideoID:'ID1001',//视频初始ID\n        videoList:[\n          {\n            videoID:'ID1001',//视频ID\n            videoUrl:'http://www.w3school.com.cn/example/html5/mov_bbb.mp4',//视频播放地址\n            questionContent:'什么是BMI?',//视频播放结束后的题目\n            options:[\n              {\n                content:'我不知道',//选项描述\n                nextVideoID:'ID1002',//选择该选项后要跳转的视频\n              },\n              {\n                content:'我知道',//选项描述\n                nextVideoID:'ID1003',//选择该选项后要跳转的视频\n              }\n            ],//题目选项\n            answer:0,//题目答案\n          },\n          {\n            videoID:'ID1002',//视频ID\n            videoUrl:'http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4',//视频播放地址\n          },\n          {\n            videoID:'ID1003',//视频ID\n            videoUrl:'https://media.w3.org/2010/05/sintel/trailer.mp4',//视频播放地址\n          }\n        ]\n      },//视频配置\n    }\n  },\n\n  mounted() {\n\n    //首先获取startVideoID\n    let startVideoID=this.videoConfig.startVideoID\n    this.videoCore(startVideoID)\n\n  },\n  methods:{\n\n    //视频切换核心\n    videoCore(videoID){\n      //从videoList查找视频\n      this.currentVideo=this.videoConfig.videoList.find((video)=>{\n        return video.videoID===videoID\n      })\n      this.player=Videojs(document.getElementById('myVideo'),this.videoPlayerOption,()=>{})\n\n      this.player.on('timeupdate',()=>{\n        let currentTime=this.player.currentTime();\n        console.log(\"当前视频ID:\",this.currentVideo.videoID,\"当前视频进度：\",currentTime)\n        /**\n         * TODO:判断当前视频播放进度,将当前视频播放时间通知出去\n         **/\n      })\n      this.player.on('play',()=>{\n        console.log(\"监听到视频开始播放\")\n      })\n      this.player.on('ended',()=>{\n        console.log(\"监听到视频播放完毕\")\n        /**\n         * TODO:展示视频后带的题目\n         **/\n        this.questionShow=true\n      })\n    },\n\n    //答案选择\n    selectOption(userAnswer){\n\n      //判断答案是否正确，展示相应的颜色\n\n      if(userAnswer===this.currentVideo.answer){\n        document.getElementById('questionOption'+userAnswer).style.background='green'\n      }else {\n        document.getElementById('questionOption'+userAnswer).style.background='red'\n      }\n\n      setTimeout(()=>{\n        this.questionShow=false\n        let nextVideoID=this.currentVideo.options[userAnswer].nextVideoID\n        console.log(\"开始播放下一个视频，视频ID:\",nextVideoID)\n        this.videoPlayerOption.autoplay=true\n        this.videoCore(nextVideoID)\n      },1500)\n    }\n  }\n\n}\n</script>\n\n<style>\n.question-option{\n  background-color: rgb(227, 238, 223);\n  padding: 10px;\n  margin-top: 12px;\n  margin-right: 200px;\n  border-radius: 7px;\n  cursor: pointer;\n  color: black;\n  font-weight: 700;\n\n}\n.question-content{\n  font-size: 22px;\n}\n.question{\n  background-color: #107bc7;\n  width: 50%;\n  padding: 30px;\n  margin: auto;\n  border-radius: 10px;\n}\n.question-box{\n  width: 1280px;\n  height: 720px;\n  position: absolute;\n  background: rgba(0,0,0,0.5);\n  top: 0;\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.video-box{\n  width: 1280px;\n  height: 720px;\n  position: relative;\n}\n</style>\n"],"mappings":";AAwBA;AACA,OAAAA,OAAA;AACA;AACA;EACAC,IAAA;EAEAC,IAAA,WAAAA,KAAA;IACA;MACAC,iBAAA;QACAC,QAAA;QAAA;QACAC,MAAA;QAAA;QACAC,QAAA;QAAA;QACAC,KAAA;QAAA;QACAC,OAAA;QAAA;QACAC,KAAA;MACA;MACAC,YAAA;MAAA;MACAC,MAAA;MAAA;MACAC,YAAA;MAAA;MACAC,WAAA;QACAC,YAAA;QAAA;QACAC,SAAA,GACA;UACAC,OAAA;UAAA;UACAC,QAAA;UAAA;UACAC,eAAA;UAAA;UACAC,OAAA,GACA;YACAC,OAAA;YAAA;YACAC,WAAA;UACA,GACA;YACAD,OAAA;YAAA;YACAC,WAAA;UACA,EACA;;UAAA;UACAC,MAAA;QACA,GACA;UACAN,OAAA;UAAA;UACAC,QAAA;QACA,GACA;UACAD,OAAA;UAAA;UACAC,QAAA;QACA;MAEA;IACA;EACA;EAEAM,OAAA,WAAAA,QAAA;IAEA;IACA,IAAAT,YAAA,QAAAD,WAAA,CAAAC,YAAA;IACA,KAAAU,SAAA,CAAAV,YAAA;EAEA;EACAW,OAAA;IAEA;IACAD,SAAA,WAAAA,UAAAR,OAAA;MAAA,IAAAU,KAAA;MACA;MACA,KAAAhB,YAAA,QAAAG,WAAA,CAAAE,SAAA,CAAAY,IAAA,WAAAC,KAAA;QACA,OAAAA,KAAA,CAAAZ,OAAA,KAAAA,OAAA;MACA;MACA,KAAAL,MAAA,GAAAX,OAAA,CAAA6B,QAAA,CAAAC,cAAA,kBAAA3B,iBAAA;MAEA,KAAAQ,MAAA,CAAAoB,EAAA;QACA,IAAAC,WAAA,GAAAN,KAAA,CAAAf,MAAA,CAAAqB,WAAA;QACAC,OAAA,CAAAC,GAAA,YAAAR,KAAA,CAAAhB,YAAA,CAAAM,OAAA,aAAAgB,WAAA;QACA;AACA;AACA;MACA;;MACA,KAAArB,MAAA,CAAAoB,EAAA;QACAE,OAAA,CAAAC,GAAA;MACA;MACA,KAAAvB,MAAA,CAAAoB,EAAA;QACAE,OAAA,CAAAC,GAAA;QACA;AACA;AACA;QACAR,KAAA,CAAAd,YAAA;MACA;IACA;IAEA;IACAuB,YAAA,WAAAA,aAAAC,UAAA;MAAA,IAAAC,MAAA;MAEA;;MAEA,IAAAD,UAAA,UAAA1B,YAAA,CAAAY,MAAA;QACAO,QAAA,CAAAC,cAAA,oBAAAM,UAAA,EAAAE,KAAA,CAAAC,UAAA;MACA;QACAV,QAAA,CAAAC,cAAA,oBAAAM,UAAA,EAAAE,KAAA,CAAAC,UAAA;MACA;MAEAC,UAAA;QACAH,MAAA,CAAAzB,YAAA;QACA,IAAAS,WAAA,GAAAgB,MAAA,CAAA3B,YAAA,CAAAS,OAAA,CAAAiB,UAAA,EAAAf,WAAA;QACAY,OAAA,CAAAC,GAAA,oBAAAb,WAAA;QACAgB,MAAA,CAAAlC,iBAAA,CAAAG,QAAA;QACA+B,MAAA,CAAAb,SAAA,CAAAH,WAAA;MACA;IACA;EACA;AAEA"}]}